package uk.gov.pay.connector.gateway.model.request;

import uk.gov.pay.connector.charge.model.domain.Charge;
import uk.gov.pay.connector.gateway.GatewayOperation;
import uk.gov.pay.connector.gatewayaccount.model.GatewayAccountEntity;
import uk.gov.pay.connector.gatewayaccount.model.GatewayCredentials;
import uk.gov.pay.connector.gatewayaccountcredentials.model.GatewayAccountCredentialsEntity;
import uk.gov.pay.connector.refund.model.domain.RefundEntity;
import uk.gov.service.payments.commons.model.AuthorisationMode;

import java.util.Optional;

public record RefundGatewayRequest (
    GatewayAccountEntity gatewayAccount,
    String amount,
    String transactionId,
    String refundExternalId,
    String chargeExternalId,
    GatewayAccountCredentialsEntity credentialsEntity,
    AuthorisationMode authorisationMode,
    boolean isForRecurringPayment
) implements GatewayRequest {

    @Override
    public GatewayAccountEntity gatewayAccount() {
        return gatewayAccount;
    }
//    public GatewayAccountEntity getGatewayAccount() {
//        return gatewayAccount;
//    }

    @Override
    public GatewayOperation requestType() {
        return GatewayOperation.REFUND;
    }
//    public GatewayOperation getRequestType() {
//        return GatewayOperation.REFUND;
//    }

    @Override
    public GatewayCredentials gatewayCredentials() {
        return credentialsEntity.getCredentialsObject();
    }
//    public GatewayCredentials getGatewayCredentials() {
//        return credentialsEntity.getCredentialsObject();
//    }

//    @Override
//    public AuthorisationMode authorisationMode() {
//        return authorisationMode;
//    }
//    public AuthorisationMode getAuthorisationMode() {
//        return authorisationMode;
//    }

//    @Override
//    public boolean isForRecurringPayment() {
//        return isForRecurringPayment;
//    }

    /**
     * <p>
     * For Worldpay ->
     *          transactionId = The original charges.gateway_transaction_id generated by us <br>
     *          reference = our externalId for this refund, <b> this is our link to the worldpay refund transaction</b>
     * </p>
     *
     * <p>
     */
    public static RefundGatewayRequest valueOf(Charge charge, RefundEntity refundEntity,
                                               GatewayAccountEntity gatewayAccountEntity,
                                               GatewayAccountCredentialsEntity gatewayAccountCredentialsEntity) {
        return new RefundGatewayRequest(
                gatewayAccountEntity,
                String.valueOf(refundEntity.getAmount()),
                charge.getGatewayTransactionId(),
                refundEntity.getExternalId(),
                charge.getExternalId(),
                gatewayAccountCredentialsEntity,
                charge.getAuthorisationMode(),
                charge.getAgreementId().isPresent()
        );
    }
    
    @Override
    public String toString() {
        return new StringBuilder()
                .append("RefundGatewayRequest[\n")
                .append("transactionId: ")
                .append(transactionId)
                .append("\nrefundExternalId: ")
                .append(refundExternalId)
                .append("]")
                .toString();
    }
}
